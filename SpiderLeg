/*
KOMPLEKSITETI:
-SpiderLeg: 2+2+1+2+1+1+1+1+2+1+n+(n-1)+2+(n-1)+(n-1)+(n-1)+(n-1)+1+1+1=n+14 = O(n);

*/

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;

import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class SpiderLeg{
	
    //Caktojme nje agjent kerkimi qe programi ti navigoje faqet si nje browser normal, pa nderhyre ne protokollin e faqeve
    private static final String AGENT =
            "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1";
	    
    //deklarojme nje liste ku do ruajme linket dhe nje dokument ku do ruajme te dhenat HTML qe marrim
    private List<String> links = new LinkedList<String>();
    private Document htmlDocument;
    File file = new File("file.txt");


    /*Funksioni kyc i programit.
    *
    *Me ane te librarise Jsoup bejme kerkesen HTTP per URL perkatese dhe mbledhim te gjitha linket ne ate faqe.
    *@param URL - URL per tu vizituar
    *@param directory - direktoria ku do ruhet skedari
    *@return whether or not the crawl was successful
    */
    
    public boolean crawl(String URL, String directory){
        try{	
            Connection connection = Jsoup.connect(URL).userAgent(AGENT); //formojme nje lidhje me URL qe do kerkojme nepermjet agjentit
            Document htmlDocument = connection.get(); //dokumenti ku do ruajme te dhenat e lidhjes
            this.htmlDocument = htmlDocument;
	    
            if(connection.response().statusCode() == 200){ //200 eshte kodi HTTP qe jep statusin OK - lidhja pati sukses
	    
                System.out.println("\n ~Duke vizituar URL nga faqja: " + URL);
            }
            
            if(!connection.response().contentType().contains("text/html")){ //nese faqja ku arritem nuk ka permbajtje text/html kthejme gabim
            	
                System.out.println("!Error - Nuk ka permbajtje HTML ne kete faqe");
                return false;
            }
            
            Elements linksOnPage = htmlDocument.select("a[href]"); //selektojme elementet linke (a[href] ne gjuhen html
            System.out.println("U gjeten (" + linksOnPage.size() + ") URL");
	    
            for(Element link : linksOnPage){ //per cdo element link qe gjetem nga faqja, e shtojme ate ne listen e linkeve te gjetura
            	FileWriter fw = new FileWriter(directory+".txt", true);
        	    BufferedWriter bw = new BufferedWriter(fw);
        	    bw.write(link.absUrl("href"));
        	    bw.newLine();
        	    bw.close();
        	
                this.links.add(link.absUrl("href"));
            }
            return true;
        }
        
        catch(IOException ioe){
            //rasti i deshtimit te parse te faqes nga HTML
            return false;
        }
    }

    public List<String> getLinks(){
        return this.links;
    }

}
