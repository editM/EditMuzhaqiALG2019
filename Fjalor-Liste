/*
Te shkruhet nje program qe lexon nje skedar text me madhesi te konsiderueshme dhe shfaq vetem njehere te gjitha
fjalet e vecante qe shfaqen ne te. Gjate leximit te skedarit, programi duhet te krijoje nje fjalor me te gjitha fjalet qe
jane shfaqur ne skedar. Sa here qe shfaqet nje fjale e re, dmth qe nuk ndodhet ne fjalor, programi duhet ta shtoje ate
ne fjalor.

ME LISTE TE LIDHUR NJE DREJTIMORE:

KOMPLEKSITETI: 
-Shtimi ne liste / add: 1+1+1+1+1 = O(1);
-Kontrolli a ekziston / alreadyExist: 1+1+n+(n-1)+1+(n-1) = 3n+1 = O(n);
-print: 1+1+n+n-1+n-1 = 3n = O(n);
-heqja e pikesimit dhe lowercase / removePunct: 2+n+(n-1)+(n-1)+1+1+1 = 3n+3 = O(n);
-main: 2+1+1+1+1+n*((3n+3)+(3n+1)+5)+3n = O(n^2)


1. 100 fjale: 0.09124s
2. 1000 fjale: 0.2975s
3. 100000 fjale: 0.996s
4. 1000000 fjale: 10.68s
*/

#include <iostream>
#include <fstream>
#include <string>
using namespace std;

//deklarimi i struktures se listes
typedef struct list{
	string word;
	struct list* next;
};

//funksion ndihmes qe kontrollon nqs fjala eshte vendosur me pare ne liste/fjalor
bool alreadyExist(list*head, string s){
	list*control;
	control = head;
	while(control!=NULL){
		if(control->word==s){//nqs e gjejme
		return true;//kthejme true
	}
		else{
		control=control->next;//ne te kundert vazhdojme me el. tjeter te listes
	}
	}
	return false;//nese iteracioni perfundon dhe elementi nuk u gjet, kthejme false
}

//funksion qe shton fjalen ne koken e listes
list* add(list*head, string s){
	list*tmp;
	tmp = new list;
	tmp->word=s;
	tmp->next=head;
	head = tmp;
}

//funksion ndihmes per te hequr shenjat e pikesimit dhe per te bere fjalet lowercase 
//ne menyre qe mos te perseriten ne forma te ndryshme
string removePunct(string s){
	int len=s.size();
	for(int i=0; i<len; i++){
        s[i]= (tolower(s[i]));
        if (ispunct(s[i]))
        {
            s.erase(i--, 1);
            len = s.size();
        }
    }
    return s;
}

//funksion per te printuar cdo element ne liste
void print(list*head){
	list*control;
	control = head;
	while(control!=NULL){
		cout<<control->word<<endl;
		control=control->next;
	}
}

int main(int argc, char** argv) {
	cout<<"Ky program merr emrin e nje skedari dhe formon nje fjalor me lista 1-drejtimore me te gjitha fjalet e skedarit te perseritura nga nje here."<<endl;
	cout<<"Ju lutem jepni emrin e skedarit me prapashtesen .txt"<<endl;
	
	//deklaroj skedarin dhe marr emrin e skedarit input nga perdoruesi
	string fileName, item;
	cin>>fileName;
	ifstream input;
	input.open(fileName);
	
	//deklaroj listen ku do te ruhen fjalet e fjalorit
	list*head = new list;
	head = NULL;
	
	if(!input.is_open()){//rasti i gabimit ne hapjen e skedarit
		cout<<"Gabim ne hapjen e skedarit!"<<endl;
	}
	else{
		while(input>>item){//per sa kohe kemi fjale input nga skedari
			item=removePunct(item);//"pastrojme" fjalen
			if(!alreadyExist(head,item)){//nese fjala nuk gjendet ne liste
				head=add(head,item);//e shtojme ne krye te listes
			}
		}
	}
	//kur skemi me fjale nga skedari, printojme listen
	print(head);
	return 0;
}
